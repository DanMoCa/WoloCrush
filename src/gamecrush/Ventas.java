/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gamecrush;

import java.awt.HeadlessException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DanDesktop
 */
public class Ventas extends javax.swing.JFrame {

    /**
     * Creates new form Ventas
     */
    public Ventas() {
        initComponents();
        URL resource = Administrador.class.getResource("/img/Icono.png");
        ImageIcon img = new ImageIcon(resource);
        this.setIconImage(img.getImage());
        this.setTitle("Ventas");
        cargarProductos();
    }

    public ResultSet pro, venta, lastId;
    int Cant;

    String columnsProd[] = {"idProducto", "Nombre", "Tipo", "Precio", "Proveedor", "Cantidad"};
    public DefaultTableModel tmProd = new DefaultTableModel(null, columnsProd) {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            return false;
        }
    };

    public String[] columnsPed = {"id", "Producto", "Cantidad", "Precio"};
    public DefaultTableModel tmVent = new DefaultTableModel(null, columnsPed) {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            return false;
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void cargarProductos() {
        try {
            String sql = "SELECT * FROM productos";
            Connection conn = Conexion.GetConnection();
            PreparedStatement ps = conn.prepareStatement(sql);

            pro = ps.executeQuery();

            while (pro.next()) {
                String[] row = {pro.getString(1), pro.getString(2), pro.getString(3), pro.getString(4), pro.getString(5), pro.getString(6)};
                tmProd.addRow(row);
            }
            jTableProductos.setModel(tmProd);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getErrorCode() + ": " + e.getMessage());
        }
    }
    
    public void clearVenta(){
        for (int row = tmVent.getRowCount() - 1; row >= 0; row--) {
            tmVent.removeRow(row);
        }
    }
    
    public void cancelVenta(){
        for(int row = tmProd.getRowCount() -1; row >= 0; row--){
            tmProd.removeRow(row);
        }
        
        clearVenta();
        
        cargarProductos();
        
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVentas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLblPrecio = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idProducto", "Nombre", "Tipo", "Proveedor", "Cantidad"
            }
        ));
        jTableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableProductosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProductos);

        jTableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idProducto", "Producto", "Cantidad", "Precio"
            }
        ));
        jScrollPane2.setViewportView(jTableVentas);

        jLabel1.setText("Precio Total");

        jButton1.setText("Aceptar");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.setEnabled(false);

        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Login");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLblPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLblPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductosMousePressed
        // TODO add your handling code here:
        try {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            Cant = Integer.parseInt(JOptionPane.showInputDialog("Cantidad"));
            String idProd, nombreProd, newcant;
            int rows, index = 0;
            Double precio, total = 0.0;
            boolean flag = false;

            rows = jTableVentas.getRowCount();

            String compare = (String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 0);
            String compare2 = "";

            int i = 1;
            if (rows == 0) {
                idProd = (String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 0);
                nombreProd = (String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 1);
                precio = (Double.parseDouble((String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 3))) * Cant;

                tmVent.addRow(new Object[]{idProd, nombreProd, Cant, precio});
                jTableVentas.setModel(tmVent);
            } else {
                int x = 0;
                z:
                while (i <= rows) {
                    try {
                        compare2 = (String) tmVent.getValueAt(x, 0);
                    } catch (Exception e) {

                    }

                    if (compare.equals(compare2)) {
                        flag = true;
                        index = i;
                        break z;
                    } else {
                        flag = false;
                    }
                    ++i;
                    ++x;
                    ++index;
                }

                if (flag) {
                    if (index - 1 < rows) {
                        index--;
                        flag = false;

                        int updatecant = (int) tmVent.getValueAt(index, 2) + Cant;
                        precio = (Double.parseDouble((String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 3))) * updatecant;
                        tmVent.setValueAt(updatecant, index, 2);
                        tmVent.setValueAt(precio, index, 3);

                    }
                } else {
                    idProd = (String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 0);
                    nombreProd = (String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 1);
                    precio = (Double.parseDouble((String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 3))) * Cant;
                    tmVent.addRow(new Object[]{idProd, nombreProd, Cant, precio});
                }
            }

            int rows2 = jTableVentas.getRowCount();
            for (int j = 0; j < rows2; j++) {
                total += (Double.parseDouble(tmVent.getValueAt(j, 3).toString()));
            }

            newcant = Integer.toString(Integer.parseInt((String) tmProd.getValueAt(jTableProductos.getSelectedRow(), 5)) - Cant);

            tmProd.setValueAt(newcant, jTableProductos.getSelectedRow(), 5);
            jLblPrecio.setText(total.toString());

        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jTableProductosMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            
            String empleado = JOptionPane.showInputDialog("Confirmar");
            String sql = "INSERT INTO ventas(Empleados_idEmpleados, precio_total) VALUES( ?, ? )";
            String sql1 = "INSERT INTO productos_has_ventas(productos_idproductos, ventas_idventas, cantidad_venta) VALUES(?, ?, ?) ";
            
            String sql3 = "UPDATE productos "
                    + "SET cantidad = cantidad - ? "
                    + "WHERE idproductos = ? ";
            String sql4 = "SELECT idempleados FROM empleados WHERE idempleados = ?";

            Connection conn = Conexion.GetConnection();
            conn.setAutoCommit(false);
            PreparedStatement ps = conn.prepareStatement(sql);
            PreparedStatement ps1 = conn.prepareStatement(sql1);
            
            PreparedStatement ps3 = conn.prepareStatement(sql3);
            PreparedStatement ps4 = conn.prepareStatement(sql4);
            
            ps4.setString(1, empleado);
            ResultSet rs = ps4.executeQuery();
            

            if (rs.next()) {
                
                ps.setString(1, empleado);
                ps.setString(2, jLblPrecio.getText());
                ps.execute();
                conn.commit();
                
                String sqlLast = "SELECT `AUTO_INCREMENT` - 2 "
                        + " FROM  INFORMATION_SCHEMA.TABLES "
                        + " WHERE TABLE_SCHEMA = 'gamecrush' "
                        + " AND   TABLE_NAME   = 'pedidos' ";
                Connection connLast = Conexion.GetConnection();
                PreparedStatement psLast = connLast.prepareStatement(sqlLast);
                lastId = psLast.executeQuery();
                lastId.next();
                String lastIdPed = lastId.getString(1);
                
                System.out.println(lastIdPed);
                int rows2 = jTableVentas.getRowCount();

                for (int j = 0; j < rows2; j++) {
                    ps3.setInt(1, (int) tmVent.getValueAt(j, 2));
                    ps3.setString(2, (String) tmVent.getValueAt(j, 0));

                    ps3.executeUpdate();
                    conn.commit();
                }

                for (int j = 0; j < rows2; j++) {
                    ps1.setString(1, (String) tmVent.getValueAt(j, 0));
                    ps1.setString(2, lastIdPed);
                    ps1.setInt(3, (int) tmVent.getValueAt(j, 2));
                    
                    ps1.execute();
                    conn.commit();
                }
                
                cancelVenta();
                clearVenta();
            } else {
                JOptionPane.showMessageDialog(this, "Empleado no valido");
            }

            ps.setString(1, sql);

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Login log = new Login();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblPrecio;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableProductos;
    private javax.swing.JTable jTableVentas;
    // End of variables declaration//GEN-END:variables
}
