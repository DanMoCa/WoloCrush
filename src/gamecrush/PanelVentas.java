/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gamecrush;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DanDesktop
 */
public class PanelVentas extends javax.swing.JPanel {

    /**
     * Creates new form PanelVentas
     */
    public PanelVentas() {

        initComponents();
        cargarVentas();
        jTableVentasHas.setModel(tmVentHas);
        
        Validacion v = new Validacion();
        v.SoloLetras(jTextFieldFind);
    }

    ResultSet ventas;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    String columns[] = {"idVenta", "Empleado", "Precio Total"};
    DefaultTableModel tmVenta = new DefaultTableModel(null, columns) {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            return false;
        }
    };

    String[] columnsVentHas = {"id Producto", "Producto", "Proveedor", "Cantidad", "Precio"};
    DefaultTableModel tmVentHas = new DefaultTableModel(null, columnsVentHas) {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            if (colIndex == 3) {
                
                return true;
            }
            return false;
        }
    };

    public void cargarVentas() {
        try {
            String sql = "SELECT t1.idVentas AS id_venta, t2.nombre AS empleado, t1.precio_total "
                    + "FROM ventas AS t1, empleados AS t2 "
                    + "WHERE t1.empleados_idempleados = t2.idempleados";
            Connection conn = Conexion.GetConnection();
            PreparedStatement ps = conn.prepareStatement(sql);

            ventas = ps.executeQuery();

            while (ventas.next()) {
                String[] rows = {ventas.getString(1), ventas.getString(2), ventas.getString(3)};
                tmVenta.addRow(rows);
            }
            jTableVentas.setModel(tmVenta);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }

    public void cargarVentHas() {
        try {
            clearVentHas();
            String sql = "SELECT t1.productos_idproductos, t2.nombre_producto, t2.proveedor, t1.cantidad_venta, t1.cantidad_venta * t2.precio "
                    + "FROM productos_has_ventas AS t1, productos AS t2 "
                    + "WHERE t1.Productos_idProductos = t2.idProductos "
                    + "AND t1.Ventas_idVentas = ? "
                    + "ORDER BY t1.ventas_idVentas ";
            Connection conn = Conexion.GetConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, (String) jTableVentas.getValueAt(jTableVentas.getSelectedRow(), 0));
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String row[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)};
                tmVentHas.addRow(row);
            }

            jTableVentasHas.setModel(tmVentHas);

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public void clearVentHas() {
        for (int row = tmVentHas.getRowCount() - 1; row >= 0; row--) {
            tmVentHas.removeRow(row);
        }
    }

    public void clearVentas() {
        for (int row = tmVenta.getRowCount() - 1; row >= 0; row--) {
            tmVenta.removeRow(row);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTableVentas = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableVentasHas = new javax.swing.JTable();
        jTextFieldFind = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jBtnBorrarVenta = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));

        jTableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVentasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableVentas);

        jTableVentasHas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTableVentasHas);

        jTextFieldFind.setText("Buscar por Empleado");
        jTextFieldFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldFindMousePressed(evt);
            }
        });
        jTextFieldFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFindKeyTyped(evt);
            }
        });

        jBtnBorrarVenta.setText("Borrar Venta");
        jBtnBorrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBorrarVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldFind, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnBorrarVenta)
                .addGap(94, 94, 94))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(948, Short.MAX_VALUE)
                    .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(20, 20, 20)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jBtnBorrarVenta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(1, 1, 1)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldFindMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldFindMousePressed
        // TODO add your handling code here:
        jTextFieldFind.setText("");
    }//GEN-LAST:event_jTextFieldFindMousePressed

    private void jTableVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVentasMouseClicked
        // TODO add your handling code here:
        cargarVentHas();
    }//GEN-LAST:event_jTableVentasMouseClicked

    private void jBtnBorrarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBorrarVentaActionPerformed
        // TODO add your handling code here:
        try {
            jTextFieldFind.setText("Buscar por Empleado");
            String sql = "DELETE FROM ventas WHERE idventas = ? ";
            String sql1 = "UPDATE productos "
                    + "SET cantidad = cantidad + ? "
                    + "WHERE idproductos = ? ";
            Connection conn = Conexion.GetConnection();
            conn.setAutoCommit(false);
            PreparedStatement ps = conn.prepareStatement(sql);
            PreparedStatement ps1 = conn.prepareStatement(sql1);

            int rows = jTableVentasHas.getRowCount();

            for (int j = 0; j < rows; j++) {
                ps1.setString(1, (String) jTableVentasHas.getValueAt(j, 3));
                ps1.setString(2, (String) jTableVentasHas.getValueAt(j, 0));
                
                ps1.executeUpdate();
                conn.commit();
            }
            
            ps.setString(1, (String)jTableVentas.getValueAt(jTableVentas.getSelectedRow(), 0));
            ps.execute();
            conn.commit();
            clearVentHas();
            clearVentas();
            cargarVentas();
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jBtnBorrarVentaActionPerformed

    private void jTextFieldFindKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFindKeyTyped
        // TODO add your handling code here:
        try {
            clearVentHas();
            clearVentas();
            String sql = "SELECT t1.idVentas AS id_venta, t2.nombre AS empleado, t1.precio_total "
                    + "FROM ventas AS t1, empleados AS t2 "
                    + "WHERE t1.empleados_idempleados = t2.idempleados "
                    + "AND t2.nombre LIKE ? "
                    + "ORDER BY t1.idventas";
            Connection conn = Conexion.GetConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, "%"+jTextFieldFind.getText()+"%");
            
            ventas = ps.executeQuery();

            while (ventas.next()) {
                String[] rows = {ventas.getString(1), ventas.getString(2), ventas.getString(3)};
                tmVenta.addRow(rows);
            }
            jTableVentas.setModel(tmVenta);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jTextFieldFindKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jBtnBorrarVenta;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableVentas;
    private javax.swing.JTable jTableVentasHas;
    private javax.swing.JTextField jTextFieldFind;
    // End of variables declaration//GEN-END:variables
}
